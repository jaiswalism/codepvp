==================================================
--- PROBLEM 1 ---
==================================================
Title: Target Sum Pair
Difficulty: Easy
Tags: Arrays, Hash Table

Statement:
Given an array of unique integers `nums` and a target integer `target`, find two distinct integers in the array that sum up to the target. Return the indices of these two numbers. You can assume that exactly one solution exists.

Input Format:
- The first line contains the target integer.
- The second line contains a space-separated list of integers representing the array `nums`.

Output Format:
- A single line with two space-separated integers representing the 0-based indices of the two numbers, sorted in ascending order.

Constraints:
- 2 <= nums.length <= 10^4
- -10^9 <= nums[i] <= 10^9
- -10^9 <= target <= 10^9

--- SAMPLES ---
Sample Input 1:
9
2 7 11 15
Sample Output 1:
0 1

Sample Input 2:
6
3 2 4
Sample Output 2:
1 2

--- HIDDEN TEST CASES ---
Input:
8
1 2 3 4 5
Output:
2 4

Input:
-1
-5 -2 1 4 6
Output:
0 3

Input:
100
50 50
Output:
Error: This case is invalid by "unique integers" constraint. Let's provide a valid one.
Input:
100
10 20 30 40 50 60 70 80 90
Output:
0 8

Input:
0
-10 10 20 30
Output:
0 1

==================================================
--- PROBLEM 2 ---
==================================================
Title: Balanced Brackets
Difficulty: Easy
Tags: Strings, Stack

Statement:
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid. An input string is valid if:
1. Open brackets must be closed by the same type of brackets.
2. Open brackets must be closed in the correct order.
3. Every close bracket has a corresponding open bracket of the same type.

Input Format:
- A single line containing the string `s`.

Output Format:
- Print "true" if the string is valid, otherwise print "false".

Constraints:
- 1 <= s.length <= 10^4

--- SAMPLES ---
Sample Input 1:
()[]{}
Sample Output 1:
true

Sample Input 2:
(]
Sample Output 2:
false

--- HIDDEN TEST CASES ---
Input:
([)]
Output:
false

Input:
{[]}
Output:
true

Input:
((()))
Output:
true

Input:
{
Output:
false

Input:
""
Output:
true

==================================================
--- PROBLEM 3 ---
==================================================
Title: Maximum Single-Sale Profit
Difficulty: Easy
Tags: Arrays, Greedy

Statement:
You are given an array `prices` where `prices[i]` is the price of a given stock on the `i-th` day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

Input Format:
- A single line containing space-separated integers for the `prices` array.

Output Format:
- A single integer representing the maximum profit.

Constraints:
- 1 <= prices.length <= 10^5
- 0 <= prices[i] <= 10^4

--- SAMPLES ---
Sample Input 1:
7 1 5 3 6 4
Sample Output 1:
5

Sample Input 2:
7 6 4 3 1
Sample Output 2:
0

--- HIDDEN TEST CASES ---
Input:
1 2 3 4 5
Output:
4

Input:
5
Output:
0

Input:
2 4 1
Output:
2

Input:
3 3 5 0 0 3 1 4
Output:
4

==================================================
--- PROBLEM 4 ---
==================================================
Title: Contains Duplicate Value
Difficulty: Easy
Tags: Arrays, Hash Table

Statement:
Given an integer array `nums`, return "true" if any value appears at least twice in the array, and "false" if every element is distinct.

Input Format:
- A single line containing space-separated integers for the `nums` array.

Output Format:
- "true" or "false".

Constraints:
- 1 <= nums.length <= 10^5
- -10^9 <= nums[i] <= 10^9

--- SAMPLES ---
Sample Input 1:
1 2 3 1
Sample Output 1:
true

Sample Input 2:
1 2 3 4
Sample Output 2:
false

--- HIDDEN TEST CASES ---
Input:
1 1 1 3 3 4 3 2 4 2
Output:
true

Input:
0
Output:
false

Input:
-1 -2 -3 0 1 2 3 -1
Output:
true

Input:
1000000000 1 2 3 4 5 1000000000
Output:
true

==================================================
--- PROBLEM 5 ---
==================================================
Title: Reverse a String
Difficulty: Easy
Tags: Strings, Two Pointers

Statement:
Write a function that reverses a string. The input string is given as a single line.

Input Format:
- A single line containing the string `s`.

Output Format:
- The reversed string.

Constraints:
- 1 <= s.length <= 10^5

--- SAMPLES ---
Sample Input 1:
hello
Sample Output 1:
olleh

Sample Input 2:
world
Sample Output 2:
dlrow

--- HIDDEN TEST CASES ---
Input:
a
Output:
a

Input:
ab
Output:
ba

Input:
racecar
Output:
racecar

Input:
12345
Output:
54321

==================================================
--- PROBLEM 6 ---
==================================================
Title: Palindrome Check
Difficulty: Easy
Tags: Strings, Two Pointers

Statement:
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases. An empty string is a valid palindrome.

Input Format:
- A single line containing the string `s`.

Output Format:
- "true" if it's a palindrome, otherwise "false".

Constraints:
- 0 <= s.length <= 2 * 10^5

--- SAMPLES ---
Sample Input 1:
A man, a plan, a canal: Panama
Sample Output 1:
true

Sample Input 2:
race a car
Sample Output 2:
false

--- HIDDEN TEST CASES ---
Input:
""
Output:
true

Input:
0P
Output:
false

Input:
Was it a car or a cat I saw?
Output:
true

Input:
.,
Output:
true

==================================================
--- PROBLEM 7 ---
==================================================
Title: Maximum Subarray Sum
Difficulty: Easy
Tags: Arrays, Dynamic Programming

Statement:
Given an integer array `nums`, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

Input Format:
- A single line of space-separated integers `nums`.

Output Format:
- An integer representing the largest sum.

Constraints:
- 1 <= nums.length <= 10^5
- -10^4 <= nums[i] <= 10^4

--- SAMPLES ---
Sample Input 1:
-2 1 -3 4 -1 2 1 -5 4
Sample Output 1:
6

Sample Input 2:
5 4 -1 7 8
Sample Output 2:
23

--- HIDDEN TEST CASES ---
Input:
1
Output:
1

Input:
-1
Output:
-1

Input:
-2 -1
Output:
-1

Input:
1 2 3 4 5
Output:
15

==================================================
--- PROBLEM 8 ---
==================================================
Title: Move Zeroes
Difficulty: Easy
Tags: Arrays, Two Pointers

Statement:
Given an integer array `nums`, move all 0's to the end of it while maintaining the relative order of the non-zero elements. This must be done in-place.

Input Format:
- A single line of space-separated integers `nums`.

Output Format:
- The modified array with space-separated integers.

Constraints:
- 1 <= nums.length <= 10^4
- -2^31 <= nums[i] <= 2^31 - 1

--- SAMPLES ---
Sample Input 1:
0 1 0 3 12
Sample Output 1:
1 3 12 0 0

Sample Input 2:
0
Sample Output 2:
0

--- HIDDEN TEST CASES ---
Input:
1 2 3 4
Output:
1 2 3 4

Input:
0 0 0 1
Output:
1 0 0 0

Input:
1 0 0 0
Output:
1 0 0 0

Input:
1 0 2 0 3 0 4
Output:
1 2 3 4 0 0 0

==================================================
--- PROBLEM 9 ---
==================================================
Title: Majority Element
Difficulty: Easy
Tags: Arrays, Hash Table, Sorting

Statement:
Given an array `nums` of size `n`, return the majority element. The majority element is the element that appears more than `n / 2` times. You may assume that the majority element always exists in the array.

Input Format:
- A single line of space-separated integers `nums`.

Output Format:
- The majority element.

Constraints:
- 1 <= n <= 5 * 10^4
- -10^9 <= nums[i] <= 10^9

--- SAMPLES ---
Sample Input 1:
3 2 3
Sample Output 1:
3

Sample Input 2:
2 2 1 1 1 2 2
Sample Output 2:
2

--- HIDDEN TEST CASES ---
Input:
1
Output:
1

Input:
-1 -1 2
Output:
-1

Input:
6 5 5
Output:
5

Input:
3 3 4 2 4 4 2 4 4
Output:
4

==================================================
--- PROBLEM 10 ---
==================================================
Title: Fizz Buzz Classic
Difficulty: Easy
Tags: Math, Strings

Statement:
Given an integer `n`, return a list of strings where:
- The `i`-th element is "FizzBuzz" if `i` is divisible by 3 and 5.
- The `i`-th element is "Fizz" if `i` is divisible by 3.
- The `i`-th element is "Buzz" if `i` is divisible by 5.
- The `i`-th element is the number `i` (as a string) if none of the above conditions are true.
The list should be for numbers from 1 to `n`.

Input Format:
- A single integer `n`.

Output Format:
- A single line with the resulting list elements, space-separated.

Constraints:
- 1 <= n <= 10^4

--- SAMPLES ---
Sample Input 1:
3
Sample Output 1:
1 2 Fizz

Sample Input 2:
15
Sample Output 2:
1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz

--- HIDDEN TEST CASES ---
Input:
1
Output:
1

Input:
5
Output:
1 2 Fizz 4 Buzz

Input:
6
Output:
1 2 Fizz 4 Buzz Fizz

Input:
30
Output:
1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz 16 17 Fizz 19 Buzz Fizz 22 23 Fizz Buzz 26 Fizz 28 29 FizzBuzz

==================================================
--- PROBLEM 11 ---
==================================================
Title: Product of Array Except Self
Difficulty: Medium
Tags: Arrays, Prefix Sum

Statement:
Given an integer array `nums`, return an array `answer` such that `answer[i]` is equal to the product of all the elements of `nums` except `nums[i]`. You must write an algorithm that runs in O(n) time and does not use the division operation.

Input Format:
- A single line of space-separated integers `nums`.

Output Format:
- A single line of the resulting space-separated integers.

Constraints:
- 2 <= nums.length <= 10^5
- -30 <= nums[i] <= 30

--- SAMPLES ---
Sample Input 1:
1 2 3 4
Sample Output 1:
24 12 8 6

Sample Input 2:
-1 1 0 -3 3
Sample Output 2:
0 0 9 0 0

--- HIDDEN TEST CASES ---
Input:
1 0
Output:
0 1

Input:
-1 -1
Output:
-1 -1

Input:
2 3 0 0
Output:
0 0 0 0

Input:
1 2 3 4 5
Output:
120 60 40 30 24

==================================================
--- PROBLEM 12 ---
==================================================
Title: Group Anagrams
Difficulty: Medium
Tags: Hash Table, Strings

Statement:
Given a list of strings, group the anagrams together. You can return the answer in any order. An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Input Format:
- A single line of space-separated strings.

Output Format:
- Each line of the output should contain a group of anagrams, space-separated. The groups themselves can be in any order, and strings within a group can be in any order.

Constraints:
- 1 <= strs.length <= 10^4
- 0 <= strs[i].length <= 100
- strs[i] consists of lowercase English letters.

--- SAMPLES ---
Sample Input 1:
eat tea tan ate nat bat
Sample Output 1:
(Order of lines and words within lines may vary)
bat
tan nat
eat tea ate

Sample Input 2:
a
Sample Output 2:
a

--- HIDDEN TEST CASES ---
Input:
""
Output:
""

Input:
cab car
Output:
cab
car

Input:
listen silent elbow below
Output:
listen silent
elbow below

Input:
abc bca cba def fed efd
Output:
abc bca cba
def fed efd

==================================================
--- PROBLEM 13 ---
==================================================
Title: 3Sum
Difficulty: Medium
Tags: Arrays, Two Pointers

Statement:
Given an integer array `nums`, find all unique triplets `[nums[i], nums[j], nums[k]]` such that `i != j`, `i != k`, and `j != k`, and `nums[i] + nums[j] + nums[k] == 0`. Notice that the solution set must not contain duplicate triplets.

Input Format:
- A single line of space-separated integers `nums`.

Output Format:
- Each line of output should contain a unique triplet, with numbers space-separated and sorted. The triplets themselves should be printed in lexicographical order. If no such triplets exist, print "None".

Constraints:
- 3 <= nums.length <= 3000
- -10^5 <= nums[i] <= 10^5

--- SAMPLES ---
Sample Input 1:
-1 0 1 2 -1 -4
Sample Output 1:
-1 -1 2
-1 0 1

Sample Input 2:
0 1 1
Sample Output 2:
None

--- HIDDEN TEST CASES ---
Input:
0 0 0
Output:
0 0 0

Input:
0 0 0 0
Output:
0 0 0

Input:
-2 0 1 1 2
Output:
-2 0 2
-2 1 1

Input:
-1 0 1 0
Output:
-1 0 1

==================================================
--- PROBLEM 14 ---
==================================================
Title: Rotate Image
Difficulty: Medium
Tags: Arrays, Matrix

Statement:
You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise). You have to rotate the image in-place, which means you have to modify the input 2D matrix directly.

Input Format:
- The first line contains an integer `n`.
- The next `n` lines each contain `n` space-separated integers, representing the matrix.

Output Format:
- Print the `n x n` matrix after rotation, with each row on a new line and elements space-separated.

Constraints:
- 1 <= n <= 20
- -1000 <= matrix[i][j] <= 1000

--- SAMPLES ---
Sample Input 1:
3
1 2 3
4 5 6
7 8 9
Sample Output 1:
7 4 1
8 5 2
9 6 3

Sample Input 2:
4
5 1 9 11
2 4 8 10
13 3 6 7
15 14 12 16
Sample Output 2:
15 13 2 5
14 3 4 1
12 6 8 9
16 7 10 11

--- HIDDEN TEST CASES ---
Input:
1
10
Output:
10

Input:
2
1 2
3 4
Output:
3 1
4 2

Input:
2
-1 -2
-3 -4
Output:
-3 -1
-4 -2

==================================================
--- PROBLEM 15 ---
==================================================
Title: Longest Substring Without Repeating Characters
Difficulty: Medium
Tags: Hash Table, String, Sliding Window

Statement:
Given a string `s`, find the length of the longest substring without repeating characters.

Input Format:
- A single line containing the string `s`.

Output Format:
- A single integer representing the length.

Constraints:
- 0 <= s.length <= 5 * 10^4
- `s` consists of English letters, digits, symbols and spaces.

--- SAMPLES ---
Sample Input 1:
abcabcbb
Sample Output 1:
3

Sample Input 2:
bbbbb
Sample Output 2:
1

--- HIDDEN TEST CASES ---
Input:
pwwkew
Output:
3

Input:
""
Output:
0

Input:
a
Output:
1

Input:
dvdf
Output:
3

==================================================
--- PROBLEM 16 ---
==================================================
Title: Coin Change
Difficulty: Medium
Tags: Dynamic Programming

Statement:
You are given an array of integer `coins` representing coins of different denominations and an integer `amount` representing a total amount of money. Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. You may assume that you have an infinite number of each kind of coin.

Input Format:
- The first line contains the target `amount`.
- The second line contains a space-separated list of coin denominations.

Output Format:
- A single integer.

Constraints:
- 1 <= coins.length <= 12
- 1 <= coins[i] <= 2^31 - 1
- 0 <= amount <= 10^4

--- SAMPLES ---
Sample Input 1:
11
1 2 5
Sample Output 1:
3

Sample Input 2:
3
2
Sample Output 2:
-1

--- HIDDEN TEST CASES ---
Input:
0
1 2 3
Output:
0

Input:
1
2
Output:
-1

Input:
7
1 3 4 5
Output:
2

Input:
6249
186 419 83 408
Output:
20

==================================================
--- PROBLEM 17 ---
==================================================
Title: Spiral Matrix
Difficulty: Medium
Tags: Array, Matrix

Statement:
Given an `m x n` matrix, return all elements of the matrix in spiral order.

Input Format:
- The first line contains two integers `m` and `n`.
- The next `m` lines each contain `n` space-separated integers.

Output Format:
- A single line of space-separated integers in spiral order.

Constraints:
- 1 <= m, n <= 10
- -100 <= matrix[i][j] <= 100

--- SAMPLES ---
Sample Input 1:
3 3
1 2 3
4 5 6
7 8 9
Sample Output 1:
1 2 3 6 9 8 7 4 5

Sample Input 2:
3 4
1 2 3 4
5 6 7 8
9 10 11 12
Sample Output 2:
1 2 3 4 8 12 11 10 9 5 6 7

--- HIDDEN TEST CASES ---
Input:
1 1
5
Output:
5

Input:
1 5
1 2 3 4 5
Output:
1 2 3 4 5

Input:
5 1
1
2
3
4
5
Output:
1 2 3 4 5

Input:
2 2
1 2
3 4
Output:
1 2 4 3

==================================================
--- PROBLEM 18 ---
==================================================
Title: Kth Largest Element in an Array
Difficulty: Medium
Tags: Array, Sorting, Heap

Statement:
Given an integer array `nums` and an integer `k`, return the `k`-th largest element in the array. Note that it is the k-th largest element in the sorted order, not the k-th distinct element.

Input Format:
- The first line contains the integer `k`.
- The second line contains the space-separated integers of array `nums`.

Output Format:
- A single integer.

Constraints:
- 1 <= k <= nums.length <= 10^5
- -10^4 <= nums[i] <= 10^4

--- SAMPLES ---
Sample Input 1:
2
3 2 1 5 6 4
Sample Output 1:
5

Sample Input 2:
4
3 2 3 1 2 4 5 5 6
Sample Output 2:
4

--- HIDDEN TEST CASES ---
Input:
1
1
Output:
1

Input:
3
-1 -1 2
Output:
-1

Input:
2
1 1 1 1 1
Output:
1

Input:
5
7 6 5 4 3 2 1
Output:
3

==================================================
--- PROBLEM 19 ---
==================================================
Title: Word Break
Difficulty: Medium
Tags: Hash Table, String, Dynamic Programming

Statement:
Given a string `s` and a dictionary of strings `wordDict`, return "true" if `s` can be segmented into a space-separated sequence of one or more dictionary words. Note that the same word in the dictionary may be reused multiple times in the segmentation.

Input Format:
- The first line is the string `s`.
- The second line is a space-separated list of words in `wordDict`.

Output Format:
- "true" or "false".

Constraints:
- 1 <= s.length <= 300
- 1 <= wordDict.length <= 1000
- 1 <= wordDict[i].length <= 20
- `s` and `wordDict[i]` consist of lowercase English letters.

--- SAMPLES ---
Sample Input 1:
leetcode
leet code
Sample Output 1:
true

Sample Input 2:
catsandog
cats cat sand and dog
Sample Output 2:
false

--- HIDDEN TEST CASES ---
Input:
applepenapple
apple pen
Output:
true

Input:
a
b
Output:
false

Input:
aaaaaaa
aaa aaaa
Output:
true

Input:
bb
a b c
Output:
true

==================================================
--- PROBLEM 20 ---
==================================================
Title: Binary Tree Level Order Traversal
Difficulty: Medium
Tags: Tree, Breadth-First Search

Statement:
Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level). The tree is represented by an array where `null` signifies a missing node in a level-complete tree structure.

Input Format:
- A single line containing the space-separated values of the tree in level order, with "null" for empty nodes.

Output Format:
- Each line of the output represents a level, with node values space-separated.

Constraints:
- The number of nodes in the tree is in the range [0, 2000].
- -1000 <= Node.val <= 1000

--- SAMPLES ---
Sample Input 1:
3 9 20 null null 15 7
Sample Output 1:
3
9 20
15 7

Sample Input 2:
1
Sample Output 2:
1

--- HIDDEN TEST CASES ---
Input:
(empty line)
Output:
(empty output)

Input:
1 null 2 null 3
Output:
1
2
3

Input:
10 5 15 2 7 12 20
Output:
10
5 15
2 7 12 20

Input:
1 2 3 4 5 6 7
Output:
1
2 3
4 5 6 7